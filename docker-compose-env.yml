version: '3'

services:

#zookeeper是kafka的依赖 
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    environment:
      TZ: Asia/Shanghai
    restart: always
    ports:
      - 2181:2181
    networks:
      - Book_Homestay_net
 #kafka 消息队列
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=false
      - TZ=Asia/Shanghai
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - Book_Homestay_net
    depends_on:
      - zookeeper

# filebeat 收集日志输出到kafka
  filebeat:
    image: elastic/filebeat:7.13.4
    container_name: filebeat
    environment:
      TZ: Asia/Shanghai
    user: root
    restart: always
    entrypoint: "filebeat -e -strict.perms=false"  #解决配置文件权限问题 
    volumes:
      - ./config/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - /var/lib/docker/containers:/var/lib/docker/containers
    networks:
      - Book_Homestay_net
    depends_on:
      - kafka


#消费kafka数据输出到es 
  go-stash:
    image:  kevinwan/go-stash:1.0-arm64
    container_name: go-stash
    environment:
      TZ: Asia/Shanghai
    user: root
    restart: always
    volumes:
      - ./config/go-stash/etc:/app/etc
    networks:
      - Book_Homestay_net
    depends_on:
      - elasticsearch
      - kafka


#搜集go-stash输出、存储prometheus监控数据 
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.4
    container_name: elasticsearch
    user: root
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - TZ=Asia/Shanghai
    volumes:
      - ./data/elasticsearch/data:/usr/share/elasticsearch/data
    restart: always
    ports:
    - 9200:9200
    - 9300:9300
    networks:
      -Book_Homestay_net

#查看elasticsearch数据 
  kibana:
    image: docker.elastic.co/kibana/kibana:7.13.4
    container_name: kibana
    environment:
      - elasticsearch.hosts=http://elasticsearch:9200
      - TZ=Asia/Shanghai
    restart: always
    networks:
      - Book_Homestay_net
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch



#jaeger链路追踪 
  jaeger:
    image: jaegertracing/all-in-one:1.42.0
    container_name: jaeger
    restart: always
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "9411:9411"
    environment:
      - SPAN_STORAGE_TYPE=elasticsearch
      - ES_SERVER_URLS=http://elasticsearch:9200
      - LOG_LEVEL=debug
    networks:
      - Book_Homestay_net

#prometheus 服务监控 
  prometheus:
    image: prom/prometheus:v2.28.1
    container_name: prometheus
    environment:
      TZ: Asia/Shanghai
    volumes:
      - ./deploy/prometheus/server/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./data/prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    restart: always
    user: root
    ports:
      - 9090:9090
    networks:
      - Book_Homestay_net

  #查看prometheus监控数据 
  grafana:
    image: grafana/grafana:8.0.6
    container_name: grafana
    hostname: grafana
    user: root
    environment:
      TZ: Asia/Shanghai
    restart: always
    volumes:
        - ./data/grafana/data:/var/lib/grafana
    ports:
        - "3001:3000"
    networks:
        - Book_Homestay_net

